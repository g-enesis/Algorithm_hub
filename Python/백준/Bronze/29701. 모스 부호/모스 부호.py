
# 모스부호 콜렉션 정의
MOCK_MOS = {
    "A"	: ".-",	
    "B" : "-...",
    "C"	: "-.-.",	
    "D"	:"-..",
    "E"	:".",
    "F"	:"..-.",
    "G"	:"--.",
    "H"	:"....",
    "I"	:"..",
    "J"	:".---",
    "K"	:"-.-",
    "L"	:".-..",
    "M"	:"--",
    "N"	:"-.",
    "O"	:"---",
    "P"	:".--.",
    "Q"	:"--.-",	
    "R"	:".-.",
    "S"	:"...",
    "T"	:"-",
    "U"	:"..-",
    "V"	:"...-",
    "W"	:".--",
    "X"	:"-..-",
    "Y"	:"-.--",	
    "Z"	:"--..",
    "1"	:".----",	
    "2"	:"..---",
    "3"	:"...--",	
    "4"	:"....-",
    "5"	:".....",	
    "6"	:"-....",
    "7"	:"--...",	
    "8"	:"---..",
    "9"	:"----.",	
    "0"	:"-----",
    ","	:"--..--",	
    "."	:".-.-.-",
    "?"	:"..--..",	
    ":"	:"---...",
    "-"	:"-....-",	
    "@"	:".--.-."
    }

# 입력받은 모스부호 문자길이를 받아온다.
mos_length = int(input()) 

# 해독할 모스부호를 받아온다.
mos_string = list(map(str, input().split()))

# 해독한 모스부호 문자를 저장할 변수선언
result = ""

# 입력받은 모스부호 문자길이만큼 반복하고 그 값을 활용한다.
for mos in mos_string:
    # 미리 정의된 모스부호 콜렉션을 가져와서 탐색한다.(key, value를 뽑아온다.)

    for key, value in MOCK_MOS.items():
        # 입력받은 모스부호의 공백기준 잘라온 값을 value로 두고 
        # 모스부호 콜렉션에서 맞는 값이 있다면 그 문자를 result에 덧붙인다.
        if mos == value:
            result += key

print(result)
